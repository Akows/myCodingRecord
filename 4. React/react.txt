React.js
자바스크립트의 UI 라이브러리, Meta(전 FaceBook)이 개발한 오픈소스 프로젝트.
Component 기반의 UI 라이브러리.

Node.js를 동작 환경으로 필요로 한다.

웹 프론트엔드 기술이지만, 여기서 파생된 React Native로 모바일 어플리케이션을 개발할 수도 있다.
다른 기술이지만 파생 기술이기에 배우는데 필요한 시간과 노력이 상대적으로 작다.

오픈 채팅방 비밀번호는 wlreact입니다.

왜 React인가?

    중복 코드 관리 - 
    웹 페이지에는 공통된 요소들이 다수 존재한다. 기존 HTML/CSS로는 공통된 요소들을 모든 페이지 파일에 기재해주어야하는데,
    이렇게 되면 중복된 코드가 많아 자원을 과도하게 소모하고 유지보수의 효율성이 매우 떨어지게 된다.
    React는 컴포넌트를 통해 공통된 요소를 아주 간단하게 관리할 수 있다.

    편리한 기능 구현 - 
    바닐라 자바스크립트에서 어떤 기능을 구현한다면 태그의 id나 class를 기준으로 요소를 규정한 다음 모든 절차를
    하나하나 세세하게 기재해야 한다. 이를 명령형 프로그래밍이라고 한다.
    React는 선언형 프로그래밍 방식을 사용하는 라이브러리로, 더 쉽고 간단하게 기능을 구현할 수 있게 해준다.

    가상 DOM -
    DOM은 브라우저에서 사용되는 객체를 의미한다. React는 이를 사용자가 더 편하도록 적절하게 이용할 수 있게 해준다.
    바닐라 자바스크립트에서 웹 브라우저는 작업이 이루어질 때 DOM을 계속 업데이트 하면서 자원을 소모하게 된다.
    React는 이런 과정에서 발생할 수 있는 낭비를 방지하기 위해 가상 DOM에서 중간 과정을 대신 한 다음 최후에 실제 DOM에
    적용한다.

React APP
React는 Node.js 기반 라이브러리며, 자신을 보조해주는 하위 라이브러리들이 존재한다.
- Webpack : 여러 자바스크립트 파일을 하나로 합쳐주는 모듈 번들 라이브러리.
- Bable : 더 쉽고 직관적인 자바스크립트 사용을 도와주는 라이브러리.

React의 핵심 코어를 기준으로 필요한 라이브러리들을 일일이 다운로드 한다는 것은 매우 복잡하고 어려운 과정이다.
따라서 React는 필요한 핵심 라이브러리들을 모두 포함한 채 React App을 생성해주는 방법이 존재한다.

JSX
- React로 만들어진 App을 살펴보면, 자바스크립트와 HTML이 혼합되어 있는 것을 볼 수 있다.

==================================================================================================================

State

리액트 컴포넌트에 있는 State가 변화하면 그 컴포넌트가 리랜더링 된다.
짧은 코드와 유연한 문법으로 화면에 나타나는 데이터를 쉽게 교체할 수 있게 해준다.

==================================================================================================================

Props

컴포넌트에게 데이터를 전달하는 가장 기본적이고, 간단하며 강력한 방법.
Props가 변경될 때에도 리랜더링이 발생한다.

다수의 Props를 전달하는 좋은 방법 : 스프레드 연산자를 이용하면 많은 props를 간단하게 전달할 수 있다.

const props = {
    a: 1,
    b: 2,
    c: 3,
}

<Component {...props}>

================================

props를 받는 방법은 . 표기법을 사용해도 되지만, 비구조화 할당으로 Props 이름을 그대로 사용하여 받아올 수도 있다.

const Component = ( { a } ) => {
    ...
}

================================

버그 등의 이유로 props가 전달되지 않을 경우. defaultProps를 이용하여 Props의 초기값을 주어 에러를 방지할 수도 있다.

Component.defaultProps = { a: 0, };

================================

컴포넌트 자체가 Props로 전달될 수도 있다.
컴포넌트 태그 내부에 존재하는 요소들은 그 컴포넌트의 Props으로 간주된다.

==================================================================================================================

리랜더링
자기 자신의 state가 변화할 때,
부모 컴포넌트의 state가 변화할 때,
props가 내려올 때. 일어난다.

==================================================================================================================

react developer tools

구글 크롬의 확장 프로그램.

리액트 개발에 필요한 다수의 유용한 툴을 제공해준다.

컴포넌트의 구조, props의 종류 등을 모두 출력해주고, 리랜더링이 발생하는 컴포넌트를 하이라이트 해주는 등의 기능이 있다.

==================================================================================================================
