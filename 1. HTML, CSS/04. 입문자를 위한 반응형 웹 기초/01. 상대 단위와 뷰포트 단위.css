/* 단위 기준 px, rem, em */

/* px 모니터 화소 하나를 절대기준 단위 */
/* px는 절대 단위로, 가변성이 없어 반응형 웹에는 적합한 단위가 아니다. */

/* rem 최상위 태그의 font-size에 대응하는 상대기준 단위 */
/* em 상위 태그의 font-size에 대응하는 상대기준 단위 */
/* em은 내외부 여백 크기를 정할 때 자기 자신의 글자 크기를 기준으로 잡는다. */

/* 그런데 em과 rem은 가변성을 지니고 있긴 하지만 기기 화면을 기준으로 삼고 있지 않아 진정항 반응형 단위라고 할 수는 없다.*/
/* 다만 다른 기술들과 혼합되면 반응형 웹 구현에 상당히 유용하게 사용되긴 한다. */

.a {
    /* 뷰포트 너비의 100/1 */
    font-size: 1vw;
    /* 뷰포트 높이의 100/1 */
    font-size: 1vh;

    /* 뷰포트 너비와 높이 중 작은 쪽의 100/1 */
    font-size: 1vmin;
    /* 뷰포트 너비와 높이 중 높은 쪽의 100/1 */
    font-size: 1vmax;
}

.b {
    /* % 단위 */
    /* 부모 요소를 기준으로 상대적 크기를 지정할 때 사용. */
    /* 너비, 높이, 여백, 글자 크기까지 모두 지원한다. */

    width: 100%;
    padding: 10%;

    /* CSS 함수 */
    /* 표현식 하나를 받아 결과를 최종 값으로 사용하는 함수. 단순 계산식이면 무엇이든 사용가능하다. */

    /* 버튼 같은 요소를 무작정 가변적으로 돌리면 너비 크기에 따라서 어색한 여백이 생기는 문제가 있다. */
    /* 그럴 때 clac 함수를 사용해주면 반응형 웹의 어떤 환경에서도 적절한 화면 구성을 유지할 수 있게 된다. */
    width: calc(100% - 20px);
}

/* 미디어 쿼리 */
/* 미디어 타입을 인식하고, 기기나 브라우저의 물리적 속성을 감지할 수 있는 유용한 기능. */

/* 미디어 쿼리로 사용되는 것은 통상 screen이지만, 인쇄 결과물 print / 음성 장치 speech 등도 존재한다. */

/* screen의 최대 너비가 1000px 이하일 경우에 동작하는 CSS 코드 */
/* max, min을 사용하지 않으면, width: 1000px 조건은 너비가 정확히 1000px인 경우만으로 설정된다.  */
@media screen and (max-width: 1000px) {
    .a {

    }
    .b {

    }
}

/* 미디어 쿼리는 보통 css 파일 내부에서 작성되지만, link 태그나 import를 이용해 아예 독립적인 css 파일에서 사용 할 수는 있다. */

.c {
    /* 가변 이미지 */
    /* 이미지에 다음과 같은 조건을 설정하면, 이미지는 최대 200px 이상 커지지 않는다. */
    max-width: 200px;
    /* 부모 요소를 기준으로 크기가 변하되, 절대 부모 요소의 최대 너비를 넘지 못한다. */
    max-width: 100%;

    /* 가변 동영상 */
    /* 사용 방법은 이미지와 동일하지만, 동영상의 종류나 외부 링크를 사용할 경우 기존 처리 방법만으로는 반응형이 제대로 구현되지 못한다. */
    /* 특히 외부 동영상 링크를 가져오기 위해 iframe를 사용하게 되면, 반응형 웹이 제대로 구현되지 못하게 된다. */
    /* 이럴 때 사용하기 좋은 방법이 존재한다. */
    /* HTML 파일 참조. */
}
